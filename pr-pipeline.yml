pr:
  branches:
    include:
    - '*' 

pool:
  vmImage: 'ubuntu-16.04' # Has Docker

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.12'
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- task: Bash@3
  displayName: 'Run tests'
  inputs:
    targetType: 'inline'
    workingDirectory: '$(modulePath)'
    script: |
      go get -v -u github.com/jstemmer/go-junit-report
      go test -v 2>&1 | go-junit-report > test-results.xml

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(modulePath)/test-results.xml'
    failTaskOnFailedTests: true

# Attempt to build (running tests does not do all the things that making the project does)
- script: make all
  workingDirectory: '$(modulePath)'
  displayName: 'Build project file'
