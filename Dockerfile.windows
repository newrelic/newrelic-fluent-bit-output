# escape=`

ARG WINDOWS_VERSION=ltsc2019

FROM mcr.microsoft.com/windows/servercore:$WINDOWS_VERSION  AS nrBuilder

WORKDIR /build

USER ContainerAdministrator

#################################################
# Install Chocolatey
#################################################

RUN powershell.exe Invoke-WebRequest `
  -Uri https://chocolatey.org/install.ps1 `
  -OutFile C:\chocolatey-install.ps1
RUN powershell.exe `
  -ExecutionPolicy bypass `
  -InputFormat none `
  -NoProfile `
  C:\chocolatey-install.ps1
RUN setx PATH "%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"

#################################################
# Base Dependencies
#################################################

RUN choco install --yes --no-progress mingw git
RUN choco install --yes --no-progress golang --version=1.12

# Put the path before the other paths so that MinGW shadows Windows commands.
RUN setx PATH "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw\bin;%PATH%"

#################################################
# Compile the newrelic-fluent-bit-output plugin
#################################################
COPY Makefile go.* *.go ./
COPY config/ ./config
COPY nrclient/ ./nrclient
COPY record/ ./record
COPY utils/ ./utils

ENV SOURCE docker

RUN setx CGO_ENABLED "1"
RUN setx GOOS "windows"
RUN setx GOARCH "amd64"
RUN go build -buildmode=c-shared -o out_newrelic.dll .


# -------------------------------------------------------------------------------------------------------------#
#                                                                                                              #
# The following contents are copied from the original Fluent Bit repository (except the last part,             #
# where we build and copy the New Relic plugin inside the resulting runtime image), as there is no published   #
# Docker image for it. Link:  https://github.com/fluent/fluent-bit/blob/master/dockerfiles/Dockerfile.windows  #
#                                                                                                              #
# -------------------------------------------------------------------------------------------------------------#

#
# Builder Image - Windows Server Core
#
FROM mcr.microsoft.com/windows/servercore:$WINDOWS_VERSION as builder

# The FLUENTBIT_VERSION ARG must be after the FROM instruction
ARG FLUENTBIT_VERSION=1.8.1
ARG IMAGE_CREATE_DATE
ARG IMAGE_SOURCE_REVISION

# Metadata as defined in OCI image spec annotations
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
LABEL org.opencontainers.image.title="Fluent Bit" `
      org.opencontainers.image.description="Fluent Bit is an open source and multi-platform Log Processor and Forwarder which allows you to collect data/logs from different sources, unify and send them to multiple destinations. It's fully compatible with Docker and Kubernetes environments." `
      org.opencontainers.image.created=$IMAGE_CREATE_DATE `
      org.opencontainers.image.version=$FLUENTBIT_VERSION `
      org.opencontainers.image.authors="Eduardo Silva <eduardo@treasure-data.com>" `
      org.opencontainers.image.url="https://hub.docker.com/r/fluent/fluent-bit" `
      org.opencontainers.image.documentation="https://docs.fluentbit.io/manual/" `
      org.opencontainers.image.vendor="Fluent Organization" `
      org.opencontainers.image.licenses="Apache-2.0" `
      org.opencontainers.image.source="https://github.com/fluent/fluent-bit" `
      org.opencontainers.image.revision=$IMAGE_SOURCE_REVISION

#
# Basic setup
#
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

RUN Write-Host ('Creating folders'); `
    New-Item -Type Directory -Path /local; `
    New-Item -Type Directory -Path /fluent-bit;

WORKDIR /local

#
# Install Fluent Bit
#
RUN Write-Host ('Installing Fluent Bit'); `
    $majorminor = ([Version]::Parse("$env:FLUENTBIT_VERSION")).toString(2); `
    Invoke-WebRequest -Uri "https://fluentbit.io/releases/$($majorminor)/td-agent-bit-$($env:FLUENTBIT_VERSION)-win64.zip" -OutFile td-agent-bit.zip; `
    Expand-Archive -Path td-agent-bit.zip -Destination /local/fluent-bit; `
    Move-Item -Path /local/fluent-bit/*/* -Destination /fluent-bit/;

#
# Technique from https://github.com/StefanScherer/dockerfiles-windows/blob/master/mongo/3.6/Dockerfile
#
ADD https://aka.ms/vs/15/release/vc_redist.x64.exe /local/vc_redist.x64.exe

RUN Write-Host ('Installing Visual C++ Redistributable Package'); `
    Start-Process /local/vc_redist.x64.exe -ArgumentList '/install', '/quiet', '/norestart' -NoNewWindow -Wait; `
    Copy-Item -Path /Windows/System32/msvcp140.dll -Destination /fluent-bit/bin/; `
    Copy-Item -Path /Windows/System32/vccorlib140.dll -Destination /fluent-bit/bin/; `
    Copy-Item -Path /Windows/System32/vcruntime140.dll -Destination /fluent-bit/bin/;

#
# Runtime Image - Windows Server Nano
#
FROM mcr.microsoft.com/windows/servercore:$WINDOWS_VERSION as runtime

COPY --from=builder /fluent-bit /fluent-bit

RUN setx /M PATH "%PATH%;C:\fluent-bit\bin"

COPY --from=nrBuilder /build/out_newrelic.dll /fluent-bit/bin/out_newrelic.dll

CMD ["fluent-bit.exe", "-i", "dummy", "-o", "stdout", "-e", "/fluent-bit/bin/out_newrelic.dll"]
